{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.2.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport yahooFinance from 'yahoo-finance2';\n\nclass StockMarket extends utils.Adapter {\n\n\n    private myInterval: any;\n    private interval = 0;\n    private symbols = [];\n\n\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'yahoo-stock-market',\n        });\n        this.on('ready', this.onReady.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        this.log.info('initialize yahoo-stock-market adapter');\n\n        this.symbols = this.config.symbols;\n        if(this.symbols.length <= 0 || this.symbols == undefined) {\n            this.log.error('No stock symbols set. Please edit your adapter settings and restart this adapter!');\n            return;\n        }\n\n        this.interval = this.config.interval;\n        if(this.interval  <= 0) {\n            this.log.error('No interval set. Please edit your adapter settings and restart this adapter!');\n            return;\n        }\n\n        //initial call\n        this.readStockMarket();\n\n        //start Interval\n        this.myInterval =  this.setInterval(() => this.readStockMarket(), (this.interval * 60) * 1000);\n    }\n\n    private readStockMarket(): void {\n\n        this.log.debug('stocks to check: ' + this.symbols);\n\n        //For each symbol ask API\n        this.symbols.forEach( symbol => {\n            yahooFinance.quoteSummary(symbol, {\n                // 1. Try adding, removing or changing modules\n                // You'll get suggestions after typing first quote mark (\")\n                modules: ['price']\n            }).then( result => {\n                this.setNewStockObjects(symbol, result);\n                this.log.debug(\"Api return: '\" + JSON.stringify(result) + \"'\");\n\n                this.log.debug('stocks to check: ' + this.config.symbols);\n            }).catch(err => {\n                this.log.error('Error on APi Call for symbol: ' + symbol);\n                this.log.error(err.toString());\n            });\n        });\n    }\n\n    async setNewStockObjects(symbol: string, apiResult: any): Promise<void> {\n        //Dot ion symbol brokes with iobroker\n        symbol = symbol.replace('.', ':');\n\n        //shortname\n        await this.setObjectNotExistsAsync(symbol + '.shortName', {\n            type: 'state',\n            common: {\n                name: 'shortName',\n                role: 'info',\n                type: 'string',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.shortName', apiResult.price.shortName, true);\n\n        //longName\n        await this.setObjectNotExistsAsync(symbol + '.longName', {\n            type: 'state',\n            common: {\n                name: 'longName',\n                role: 'info',\n                type: 'string',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.longName', apiResult.price.longName, true);\n\n        //currency\n        await this.setObjectNotExistsAsync(symbol + '.currency', {\n            type: 'state',\n            common: {\n                name: 'currency',\n                role: 'info',\n                type: 'string',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.currency', apiResult.price.currency, true);\n\n        //exchangeName\n        await this.setObjectNotExistsAsync(symbol + '.exchangeName', {\n            type: 'state',\n            common: {\n                name: 'exchangeName',\n                role: 'info',\n                type: 'string',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.exchangeName', apiResult.price.exchangeName, true);\n\n        //regularMarketOpen\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketOpen', {\n            type: 'state',\n            common: {\n                name: 'regularMarketOpen',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketOpen', parseFloat(apiResult.price.regularMarketOpen), true);\n\n        //regularMarketPreviousClose\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketPreviousClose', {\n            type: 'state',\n            common: {\n                name: 'regularMarketPreviousClose',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketPreviousClose', parseFloat(apiResult.price.regularMarketPreviousClose), true);\n\n        //regularMarketPreviousClose\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketPreviousClose', {\n            type: 'state',\n            common: {\n                name: 'regularMarketPreviousClose',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketPreviousClose', parseFloat(apiResult.price.regularMarketPreviousClose), true);\n\n        //regularMarketVolume\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketVolume', {\n            type: 'state',\n            common: {\n                name: 'regularMarketVolume',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketVolume', parseInt(apiResult.price.regularMarketVolume), true);\n\n        //regularMarketDayLow\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketDayLow', {\n            type: 'state',\n            common: {\n                name: 'regularMarketDayLow',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketDayLow', parseFloat(apiResult.price.regularMarketDayLow), true);\n\n        //regularMarketDayHigh\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketDayHigh', {\n            type: 'state',\n            common: {\n                name: 'regularMarketDayHigh',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketDayHigh', parseFloat(apiResult.price.regularMarketDayHigh), true);\n\n        //regularMarketPrice\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketPrice', {\n            type: 'state',\n            common: {\n                name: 'regularMarketPrice',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketPrice', parseFloat(apiResult.price.regularMarketPrice), true);\n\n        //regularMarketChange\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketChange', {\n            type: 'state',\n            common: {\n                name: 'regularMarketChange',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketChange', parseFloat(apiResult.price.regularMarketChange), true);\n\n        //regularMarketChangePercent\n        await this.setObjectNotExistsAsync(symbol + '.regularMarketChangePercent', {\n            type: 'state',\n            common: {\n                name: 'regularMarketChangePercent',\n                role: 'value',\n                type: 'number',\n                write: false,\n                read: true,\n            },\n            native: {},\n        }).catch((error) => {\n            this.log.error(error);\n        });\n        await this.setStateAsync(symbol + '.regularMarketChangePercent', parseFloat(apiResult.price.regularMarketChangePercent) * 100, true);\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            clearTimeout(this.myInterval);\n\n            callback();\n        } catch (e) {\n            callback();\n        }\n    }\n\n    private async deleteOldObject(stockKey: string, index: number): Promise<void> {\n        const delObject = await this.getObjectAsync(stockKey + '.' + index + '.close')\n\n        if (delObject) {\n            this.log.debug('Found old Objects for key - ' + stockKey +' and index - ' + index.toString());\n            await this.delObjectAsync(stockKey + '.' + index, {recursive:true});\n            // Have one delted, next round\n            await this.deleteOldObject(stockKey, index+1);\n        }\n    }\n\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new StockMarket(options);\n} else {\n    // otherwise start the instance directly\n    (() => new StockMarket())();\n}"],
  "mappings": "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",
  "names": ["yahooFinance"]
}
